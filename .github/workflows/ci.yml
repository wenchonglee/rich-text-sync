name: Deploy to Digital Ocean

on:
  push:
    branches:
      - main

env:
  REGISTRY: "registry.digitalocean.com/wenchonglee"

jobs:
  build_and_push:
    name: Build and start
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Build frontend image
        run: docker build -t ${{ env.REGISTRY }}/rich-text-sync:frontend frontend

      - name: Build backend image
        run: docker build -t ${{ env.REGISTRY }}/rich-text-sync:backend backend

      - name: Install `doctl`
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to Digital Ocean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push frontend image to Digital Ocean Container Registry
        run: docker push ${{ env.REGISTRY }}/rich-text-sync:frontend

      - name: Push backend image to Digital Ocean Container Registry
        run: docker push ${{ env.REGISTRY }}/rich-text-sync:backend

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          password: ${{ secrets.DIGITALOCEAN_DROPLET_PASSWORD }}
          script: |
            # Git pull
            cd rich-text-sync
            git pull

            # Rebuild images images
            # docker-compose build

            # Start services
            # NOTE: there exists a docker-compose.override.yml on the droplet that handles https
            docker-compose up -d 

            # Prune and cleanup dangling images
            docker image prune -a --force --filter "until=24h"
